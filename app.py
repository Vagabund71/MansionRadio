import telebot
import time
import requests
from flask import Flask, Response, jsonify
import os
from dotenv import load_dotenv
import threading
import random

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv('API_TOKEN')
if not API_TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = telebot.TeleBot(API_TOKEN)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)
app.static_folder = '.'

# –°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –¥–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞
YANDEX_LINKS = [
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/NoB7Q_cDuTHMWA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/ZOwdB8zLx8UxkA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/lCuYYmx2saV_sA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/mUpzfeT9ybNvYA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/quSS2HtPakaiBA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/J793obwVEjgSXQ",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/TLdysYagdkD_EA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/XT78X2RIuB8dHA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/KGmfwWqVQ5gMrg",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/iRCiGtRnFXWjvw",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/UWxsiE-_Dl6DgA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/v4D9MaO4LRCvXA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/0RR9gqIx68CHLw",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/KFCc6UnLIjlKuw",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/h3xjuQJz408R3A",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/7kXxPa2r8x_WfQ",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/B-mB4AVpAPhhtg",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/7MrnIM_6numWwA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/4uXBQsnqYdyEOg",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/Trk3M_Rugfeg6A",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/Hf_OQYIkxrWNlw"
]

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
current_song_index = 0  # –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –ø–µ—Å–Ω–∏
current_song_start_time = time.time()  # –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–π –ø–µ—Å–Ω–∏

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
@app.route('/')
def serve_index():
    return app.send_static_file('index.html')

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
@app.route('/current_song')
def get_current_song():
    global current_song_index, current_song_start_time
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    elapsed_time = time.time() - current_song_start_time
    
    return jsonify({
        'song_url': YANDEX_LINKS[current_song_index],
        'elapsed_time': elapsed_time
    })

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –∞—É–¥–∏–æ
@app.route('/stream')
def stream_audio():
    def generate():
        global current_song_index, current_song_start_time
        
        if not YANDEX_LINKS:
            print("–°–ø–∏—Å–æ–∫ YANDEX_LINKS –ø—É—Å—Ç, —Å—Ç—Ä–∏–º–∏–Ω–≥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.")
            return
        
        while True:
            yandex_link = YANDEX_LINKS[current_song_index]
            print(f"–ù–∞—á–∞–ª–æ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞: {yandex_link} –≤ {time.strftime('%H:%M:%S')}")
            try:
                response = requests.get(yandex_link, stream=True)
                response.raw.decode_content = True
                while True:
                    data = response.raw.read(4096)
                    if not data:
                        break
                    yield data
                print(f"–ö–æ–Ω–µ—Ü —Å—Ç—Ä–∏–º–∏–Ω–≥–∞: {yandex_link}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ {yandex_link}: {e}")
                continue
            
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –ø–µ—Å–Ω—é
            current_song_index = (current_song_index + 1) % len(YANDEX_LINKS)
            current_song_start_time = time.time()
            time.sleep(0.05)
    
    return Response(generate(), mimetype='audio/mpeg')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ Web App
def send_radio_button(chat_id):
    keyboard = telebot.types.InlineKeyboardMarkup()
    web_app_button = telebot.types.InlineKeyboardButton(
        text="‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–¥–∏–æ",
        web_app=telebot.types.WebAppInfo(url="https://mansionradio.onrender.com")
    )
    keyboard.add(web_app_button)
    bot.send_message(
        chat_id,
        "üéß –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ DJ-—Ä–∞–¥–∏–æ!\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–¥–∏–æ.",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    print(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç {message.from_user.id}")
    send_radio_button(message.chat.id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text', 'photo', 'video', 'audio', 'document', 'sticker'])
def handle_all_messages(message):
    print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.id}: {message.text if message.text else '–Ω–µ —Ç–µ–∫—Å—Ç'}")
    send_radio_button(message.chat.id)

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == '__main__':
    print("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=bot.infinity_polling, kwargs={'skip_pending': True}, daemon=True).start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app.run(host='0.0.0.0', port=5000)