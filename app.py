import telebot
import time
import requests
from flask import Flask, Response
import os
from dotenv import load_dotenv
import threading
import random

load_dotenv()
API_TOKEN = os.getenv('API_TOKEN')
if not API_TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

bot = telebot.TeleBot(API_TOKEN)

app = Flask(__name__)
app.static_folder = '.'

YANDEX_LINKS = [
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/NoB7Q_cDuTHMWA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/ZOwdB8zLx8UxkA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/lCuYYmx2saV_sA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/mUpzfeT9ybNvYA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/quSS2HtPakaiBA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/J793obwVEjgSXQ",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/TLdysYagdkD_EA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/XT78X2RIuB8dHA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/KGmfwWqVQ5gMrg",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/iRCiGtRnFXWjvw",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/UWxsiE-_Dl6DgA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/v4D9MaO4LRCvXA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/0RR9gqIx68CHLw",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/KFCc6UnLIjlKuw",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/h3xjuQJz408R3A",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/7kXxPa2r8x_WfQ",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/B-mB4AVpAPhhtg",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/7MrnIM_6numWwA",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/4uXBQsnqYdyEOg",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/Trk3M_Rugfeg6A",
    "https://getfile.dokpub.com/yandex/get/https://disk.yandex.ru/d/Hf_OQYIkxrWNlw"
]

@app.route('/')
def serve_index():
    return app.send_static_file('index.html')

@app.route('/stream')
def stream_audio():
    def generate():
        if not YANDEX_LINKS:
            print("–°–ø–∏—Å–æ–∫ YANDEX_LINKS –ø—É—Å—Ç, —Å—Ç—Ä–∏–º–∏–Ω–≥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.")
            return
        
        start_index = random.randint(0, len(YANDEX_LINKS) - 1)
        print(f"–°–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å: {start_index}")
        
        while True:
            for i in range(start_index, len(YANDEX_LINKS)):
                yandex_link = YANDEX_LINKS[i]
                start_time = time.time()
                print(f"–ù–∞—á–∞–ª–æ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞: {yandex_link} –≤ {time.strftime('%H:%M:%S')}")
                try:
                    response = requests.get(yandex_link, stream=True)
                    response.raw.decode_content = True
                    while True:
                        data = response.raw.read(4096)
                        if not data:
                            break
                        yield data
                    end_time = time.time()
                    print(f"–ö–æ–Ω–µ—Ü —Å—Ç—Ä–∏–º–∏–Ω–≥–∞: {yandex_link}, –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–∞: {(end_time - start_time):.2f} —Å–µ–∫")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ {yandex_link}: {e}")
                    continue
                time.sleep(0.05)
            start_index = 0

    return Response(generate(), mimetype='audio/mpeg')

@bot.message_handler(commands=['start'])
def send_welcome(message):
    try:
        print(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç {message.from_user.id}")
        keyboard = telebot.types.InlineKeyboardMarkup()
        web_app_button = telebot.types.InlineKeyboardButton(
            text="‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–¥–∏–æ",
            web_app=telebot.types.WebAppInfo(url="https://mansionradio.onrender.com")
        )
        keyboard.add(web_app_button)
        bot.reply_to(
            message,
            "üéß –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ DJ-—Ä–∞–¥–∏–æ!\n\n"
            "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–¥–∏–æ.",
            reply_markup=keyboard
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ /start: {e}")
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {e}")

def run_flask():
    print("–ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞...")
    app.run(host='0.0.0.0', port=5000)

def run_bot():
    print("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    try:
        bot.infinity_polling()
    except Exception as e:
        print(f"Polling –∑–∞–≤–µ—Ä—à—ë–Ω —Å –æ—à–∏–±–∫–æ–π: {e}")

if __name__ == '__main__':
    print("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    flask_thread = threading.Thread(target=run_flask)
    bot_thread = threading.Thread(target=run_bot)
    flask_thread.start()
    bot_thread.start()
    flask_thread.join()
    bot_thread.join()